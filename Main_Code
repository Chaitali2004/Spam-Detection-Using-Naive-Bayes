import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score
import pickle


def load_data():
    df = pd.read_csv("C:\\Users\\CHAITALI JAIN\\Desktop\\database for eds\\spam_ham_dataset.csv")
    df['label'] = df['label'].map({'spam': 1, 'ham': 0})
    return df


def train_model(df):
    vectorizer = CountVectorizer()
    X = vectorizer.fit_transform(df['text'])
    X_train, X_test, y_train, y_test = train_test_split(X, df['label'], test_size=0.2)

    model = MultinomialNB()
    model.fit(X_train, y_train)

    # Save model & vectorizer
    pickle.dump(model, open("spam_model.pkl", "wb"))
    pickle.dump(vectorizer, open("vectorizer.pkl", "wb"))

    y_pred = model.predict(X_test)
    acc = accuracy_score(y_test, y_pred)
    print(f"Accuracy: {acc * 100:.2f}%")

    return model, vectorizer


def predict_message(model, vectorizer, message):
    vector = vectorizer.transform([message])
    pred = model.predict(vector)[0]
    return "spam" if pred == 1 else "ham"


def main():
    df = load_data()
    model, vectorizer = train_model(df)
    message = input("Enter a message to predict: ")
    prediction = predict_message(model, vectorizer, message)
    print(f"The message is: {prediction}")


if __name__ == "__main__":
    main()
